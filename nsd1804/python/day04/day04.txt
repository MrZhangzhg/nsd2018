>>> import shutil
>>> f1 = open('/etc/hosts', 'rb')
>>> f2 = open('/tmp/zhuji', 'wb')
>>> shutil.copyfileobj(f1, f2)
>>> f1.close()
>>> f2.close()

>>> shutil.copyfile('/etc/hosts', '/tmp/zj')
>>> shutil.copyfile('/etc/hosts', '/tmp/')   # 错误

>>> shutil.copy('/etc/hosts', '/tmp/')
>>> shutil.copy2('/etc/passwd', '/tmp')  # cp -p

>>> shutil.move('/tmp/passwd', '/var/tmp/')

>>> shutil.copytree('/etc/security', '/tmp/anquan')  # cp -r
>>> shutil.rmtree('/tmp/anquan')  # rm -rf
>>> shutil.chown('/tmp/zj', user='zhangsan', group='zhangsan')

pythonic  像python一样
a = b = 10
x, y = 10, 20   => x = 10; y = 20
x, y = (100, 200)
x, y = [1000, 2000]
关键字
>>> import keyword
>>> keyword.kwlist
>>> keyword.iskeyword('true')

>>> list(('bob', 'alice'))
>>> list('abcd')
>>> str(10)
>>> str([10, 20])
>>> tuple(['bob', 'alice'])
>>> tuple('abcd')
>>> from random import randint
>>> alist = [randint(1, 100) for i in range(10)]
>>> max(alist)
>>> min(alist)

ASCII码只有7位
1000001   A
1000010   B
1000011   C
1000100   D
ISO-8859-1 / Latin-1 在ASCII的基础上扩充了1位，共8位
中国自己使用的编码有GBK/GB2312/GB18030
ISO国际标准化组织使用了UTF编码，UTF8使用最多。它使用不定长的一串数字表示某个字符
对于英文字符UTF8只有8位，对于汉字使用24位

在python内部有字符和bytes类型之分
>>> a = '你好'    # 字符类型
>>> a.encode('utf8')   # 转成bytes类型
b'\xe4\xbd\xa0\xe5\xa5\xbd'   # \x表示16进制
>>> b = a.encode('utf8')
>>> b.decode('utf8')   # 转成str类型

字符串格式化
>>> '%s is %s years old' % ('王立军', 23)  # 常用
>>> '%s is %d years old' % ('王立军', 23)  # 常用
>>> '%s is %d years old' % ('王立军', 23.5)
>>> '97 is %c' % 97    # ASCII值
>>> '%#o' % 10   # 8进制
>>> '%#x' % 10   # 16进制
>>> '%e' % 100000  # 科学计数法
>>> '%f' % (5 / 3)   # 浮点数
print('%10s%10s' % ('name', 'age'))  # 常用
print('%10s%10s' % ('zhaozihao', 20))  # 常用

print('%-10s%-10s' % ('name', 'age'))  # 常用
print('%-10s%-10s' % ('zhaozihao', 20))   # 常用
>>> '%+d' % 10
>>> '%+d' % -10

>>> "{} is {} years old".format('zhangsan', 25)
>>> "{1} is {0} years old".format(25, 'zhangsan')
>>> "{0[1]} is {0[0]} years old".format([25, 'zhangsan'])

>>> wpath = 'c:\temp'
>>> print(wpath)   # \t被转换成tab键
c:	emp
>>> wpath = 'c:\\temp'
>>> print(wpath)
c:\temp
>>> winpath = r'c:\temp'
>>> print(winpath)
c:\temp
>>> winpath
'c:\\temp'

>>> print('+%s+' % ('*' * 48))
>>> py_str = 'Python'
>>> py_str.upper()
>>> py_str.lower()
>>> 'python'.capitalize()
>>> 'hello world'.title()
>>> py_str.center(20)
>>> py_str.center(20, '#')
>>> py_str.ljust(20)
>>> py_str.rjust(20)
>>> 'hao123'.islower()
>>> 'hao123'.isdigit()
>>> '123'.isdigit()
>>> py_str.endswith('on')
>>> py_str.startswith('abc')
>>> '  hello \t  '.strip()   # 常用
>>> '  hello \t  '.lstrip()
>>> '  hello \t  '.rstrip()
>>> 'hello.tar.gz'.split('.')
>>> 'hello sdf sdf sdf aaa'.split()

>>> alist = [10, 80, 100]
>>> alist[-1] = 200
>>> alist[:2] = [1, 50]
>>> alist[2:2] = [50, 100]

>>> alist.append(1000)
>>> alist.extend('new')
>>> alist.extend(['hello', 'world'])
>>> alist.remove(50)   # 删除列表中的第一个50
>>> alist.index('new')   # 返回new的下标
>>> alist.reverse()  # 将列表本身翻转
>>> alist.reverse()
>>> alist.insert(3, 150)  # 在下标为3的位置插入150
>>> alist.sort()  # 排序
>>> alist.count(200)  # 统计列表中有几个200
>>> alist.pop()   # 弹出列表中最后一项
>>> alist.pop(6)  # 弹出下标是6的一项

>>> atuple = (10, [1, 2, 3])
>>> atuple[-1].append(4)

>>> a = (10)
>>> type(a)
<class 'int'>
>>> a = (10,)   # 单元素元组，必须有结尾的逗号，否则逗号会自动消失
>>> type(a)
<class 'tuple'>

















