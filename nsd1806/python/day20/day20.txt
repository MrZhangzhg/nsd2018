1、激活虚拟环境
[root@room8pc16 mysite]# source /opt/djenv/bin/activate
2、新建项目
(djenv) [root@room8pc16 day20]# django-admin startproject blog
(djenv) [root@room8pc16 day20]# cd blog/
3、新建应用
(djenv) [root@room8pc16 blog]# python manage.py startapp article
4、修改配置 blog/settings
ALLOWED_HOSTS = '*'
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'article',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_TZ = False
5、为博客文章创建模型 article/models.py
from django.db import models

class Article(models.Model):
    title = models.CharField(max_length=100)
    pub_date = models.DateTimeField()
    text = models.TextField()

    def __str__(self):
        return self.title
6、生成数据库
(djenv) [root@room8pc16 blog]# python manage.py makemigrations
(djenv) [root@room8pc16 blog]# python manage.py migrate
(djenv) [root@room8pc16 blog]# python manage.py createsuperuser
7、查看数据库
(djenv) [root@room8pc16 blog]# sqlite3 db.sqlite3
sqlite> .tables
sqlite> .schema article_article
8、授权URL以article开头的路径由article应用处理 blog/urls.py
from django.conf.urls import url, include
from django.contrib import admin

urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^article/', include('article.urls')),
]
9、测试URL
(1)编写article/urls.py
from django.conf.urls import url
from . import views

urlpatterns = [
    url(r'hello', views.hello, name='hello')
]
(2)编写视图函数
from django.shortcuts import render, HttpResponse

def hello(request):
    return HttpResponse('<h1>Hello World!</h1>')
(3)启动服务器
(djenv) [root@room8pc16 blog]# python manage.py runserver 0:80
(4)访问以下网址测试
http://127.0.0.1/article/
http://127.0.0.1/article/hello
http://127.0.0.1/article/hello/
http://127.0.0.1/article/ahello
http://127.0.0.1/article/helloabc
http://127.0.0.1/article/ahellobc
http://127.0.0.1/article/hello/abc
(5)将urls.py中的网址分别做以下修改，再测试
    url(r'^hello', views.hello, name='hello'),
    url(r'^hello/', views.hello, name='hello'),
    url(r'^hello$', views.hello, name='hello'),
    url(r'^hello/$', views.hello, name='hello'),


多级规划：
比如，你正在为一所学校编写程序。程序涉及学生管理、教师管理、课程管理等。
http://server_ip/teacher/
http://server_ip/teacher/add/1/
http://server_ip/teacher/delete/1/
http://server_ip/teacher/update/1/
http://server_ip/teacher/query/1/

http://server_ip/student/
http://server_ip/student/add/1/
http://server_ip/student/delete/1/
http://server_ip/student/update/1/
http://server_ip/student/query/1/

http://server_ip/course/
http://server_ip/course/add/1/
http://server_ip/course/delete/1/
http://server_ip/course/update/1/
http://server_ip/course/query/1/

REST框架：
http://www.runoob.com/w3cnote/restful-architecture.html


10、博客首页显示全部文章，也能写新博客
(1)urls.py
from django.conf.urls import url
from . import views

urlpatterns = [
    url(r'^$', views.index, name='index'),
    url(r'^hello/$', views.hello, name='hello'),
]
(2)views.py
from django.shortcuts import render, HttpResponse
from .models import Article

def index(request):
    articles = Article.objects.order_by('-pub_date')
    return render(request, 'index.html', {'articles': articles})

def hello(request):
    return HttpResponse('<h1>Hello World!</h1>')
(3)article/templates/index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>My Blog</title>
</head>
<body>
<div>
    <form action="" method="post">
        <label>标题：</label><input type="text" name="title"><br>
        <textarea name="content" cols="50" rows="10"></textarea><br>
        <input type="submit" value="发 布">
    </form>
</div>
<hr>
{% for article in articles %}
    <div>
        <h3>{{ article.title }}</h3>
        <h5>{{ article.pub_date }}</h5>
        {{ article.text }}
    </div>
{% endfor %}
</body>
</html>

(4)修改视图函数，将通过web提交的表单内容，写入到数据库












