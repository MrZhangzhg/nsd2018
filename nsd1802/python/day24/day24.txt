python技能描述
1、熟练掌握python语言，能够编写日常工作中所需要的运维工具
2、熟悉django web框架，能够进行基本的weg开发
3、熟悉pymysql、sqlalchemy、urllib、requests等模块
4、熟悉zabbix api，通过python实现zabbix编程

项目一：达内教学自动化管理系统
描述：达内每间教室都有50台以上的学生机，经常需要对这些机器进行管理、发送文件等。
为了方便管理，开发了一套自动化管理系统。
管理系统功能描述：
1、收集教室中所有主机的IP地址
2、收集教室中所有主机的MAC地址
3、通过MAC地址，可以实现主机自动开机
4、可以向所有主机集中发送文件
5、可以在所有主机上并行执行相同的命令

项目二：持续集成/持续交付项目
描述：程序员编写好程序后，需要由运维工程师部署到服务器上。软件不断的发布新版本，运维
工程师相应地需要重复相同的部署工作。为了简化流程、实现自动化管理，通过一系列工具和程
序实现CI/CD。
功能描述：
1、搭建gitlab，实现代码版本管理
2、搭建jenkins，实现代码的下载、构建
3、在应用服务器上，编写脚本，实现软件的自动下载、部署
4、可以实现新版本的上线、老版本的回滚


创建mysite项目
# django-admin startproject mysite
# cd mysite/
# vim mysite/settings.py
ALLOWED_HOSTS = '*'
LANGUAGE_CODE = 'zh-Hans'
TIME_ZONE = 'Asia/Shanghai'

创建hosts应用
# python manage.py startapp hosts
# vim mysite/settings.py
INSTALLED_APPS = [
    ... ...
    'hosts',
]

创建模型
from django.db import models

class Host(models.Model):
    hostname = models.CharField(max_length=50)
    ip_addr = models.CharField(max_length=15)
    group = models.CharField(max_length=50)

    def __str__(self):
        return self.hostname

生成数据库
# python manage.py makemigrations
# python manage.py migrate

创建管理员用户
# python manage.py createsuperuser

将模型注册到后管理页面
# vim hosts/admin.py
from django.contrib import admin
from .models import Host

admin.site.register(Host)

启动服务器
(django_env) [root@room8pc16 mysite]# python manage.py runserver 0:80

访问http://127.0.0.1/admin





